{"version":3,"sources":["dataset.js","task.js","column.js","App.js","reportWebVitals.js","index.js"],"names":["dataset","ts","id","content","columns","title","tIds","columnOrder","Container","styled","div","props","isDragging","Task","draggableId","task","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","Title","h3","TaskList","isDraggingOver","Column","column","droppableId","type","droppableProps","map","t","placeholder","App","useState","data","onDragEnd","result","direction","tId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.157e93ea.chunk.js","sourcesContent":["const dataset = {\r\n    ts: {\r\n      \r\n      \"t-1\": { id: \"t-1\", content: \"Content for t 1\" },\r\n      \"t-2\": { id: \"t-2\", content: \"Content for t 2\" },\r\n      \"t-3\": { id: \"t-3\", content: \"Content for t 3\" },\r\n      \"t-4\": { id: \"t-4\", content: \"Content for t 4\" },\r\n      \"t-5\": { id: \"t-5\", content: \"Content for t 5\" },\r\n      \"t-6\": { id: \"t-6\", content: \"Content for t 6\" },\r\n      \"t-7\": { id: \"t-7\", content: \"Content for t 7\" },\r\n      \"t-8\": { id: \"t-8\", content: \"Content for t 8\" }\r\n    },\r\n    columns: {\r\n      \"column-1\": { id: \"column-1\", title: \"Todo\", tIds: [ 't-6','t-7','t-8']},\r\n      \"column-2\": { id: \"column-2\", title: \"In progress\", tIds: ['t-4','t-5', 't-3'] },\r\n      \"column-3\": { id: \"column-3\", title: \"Review\", tIds: ['t-2'] },\r\n      \"column-4\": { id: \"column-4\", title: \"Completed\", tIds: ['t-1'] }\r\n  },\r\n  columnOrder: [\"column-1\", \"column-2\", \"column-3\", \"column-4\"]}\r\n  export default dataset;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nconst Container = styled.div`\r\n    border: 1px solid lightgrey;\r\n    padding:8px;\r\n    margin-bottom:8px;\r\n    border-radius:10px;\r\n    background-color:${props => (props.isDragging ? 'lightgreen' : 'skyblue')};\r\n`\r\nfunction Task(props) {\r\n    return (\r\n        <Draggable draggableId={props.task.id} index={props.index}>\r\n            {(provided, snapshot) => (\r\n                <Container\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                    isDragging={snapshot.isDragging}\r\n                >\r\n                    {props.task.content}\r\n                </Container>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default Task;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Task from './task.js'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\r\nconst Container = styled.div`\r\n    margin: 8px;\r\n    border: 1px solid lightgrey;\r\n    border-radius: 2px;\r\n    width:220px;\r\n    display:flex;\r\n    flex-direction: column;\r\n    background-color:#f25f24;\r\n`;\r\nconst Title = styled.h3`\r\n    padding: 8px\r\n`;\r\nconst TaskList = styled.div`\r\n    padding: 8px;\r\n    background-color: ${props => (props.isDraggingOver ? '#f25f24' : 'inherit')};\r\n    min-height:100px;\r\n`;\r\n\r\nfunction Column(props) {\r\n    return (\r\n        <Draggable draggableId={props.column.id} index={props.index}>\r\n            {(provided) => (\r\n                <Container\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}>\r\n                    <Title {...provided.dragHandleProps}>{props.column.title}</Title>\r\n                    <Droppable droppableId={props.column.id} type='t'>\r\n                        {(provided, snapshot) => (\r\n                            <TaskList\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                                isDraggingOver={snapshot.isDraggingOver}\r\n                            >\r\n                                {props.ts.map((t, index) => <Task key={t.id} task={t} index={index} />)}\r\n                                {provided.placeholder}\r\n                            </TaskList>\r\n                        )}\r\n                    </Droppable>\r\n                </Container>\r\n\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default Column","// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport dataset from './dataset'\nimport Column from './column.js'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\n\nconst Container = styled.div`\n    display : flex;\n`\n\nconst App = () => {\n  const [data, setData] = useState(dataset)\n\n  const onDragEnd = result => {}\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId='all-columns' direction='horizontal' type='column'>\n        {(provided) => (\n          <Container {...provided.droppableProps} ref={provided.innerRef}>\n            {data.columnOrder.map((id, index) => {\n              const column = data.columns[id]\n              const ts = column.tIds.map(tId => data.ts[tId])\n\n              return <Column key={column.id} column={column} ts={ts} index={index} />\n            })}\n            {provided.placeholder}\n          </Container>\n        )}\n      </Droppable>\n    </DragDropContext>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}